# 두 개의 정수 변수 A와 B가 있다. 초기에 A의 값은 A0 , B의 값은 B0이다. 상헌이는 이 두 변수에 저장된 값을 서로 같게 만들고자 한다.
# 이를 위해 상헌이는 변수의 값을 조작할 수 있는데, 한 번의 ‘조작’은 아래 두 종류의 연산 중 하나를 택하여 한 번 수행하는 것을 의미한다.
#
# - A 에 임의의 소수(prime number)를 더한다.
#
# - B 에서 임의의 소수(prime number)를 뺀다.
#
# 여기서 '소수'란 1과 자기 자신만으로 나누어 떨어지는 1보다 큰 양의 정수를 의미한다.
# 상헌이는 최대한 많은 횟수의 조작을 통해 A와 B의 값을 같게 만들고자 한다.
# 이것이 가능한지 판단하고, 가능하다면 최대 횟수를 구하는 프로그램을 작성하라.
#
#
#
# [입력]
#
# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
#
# 각 테스트 케이스는 한 개의 줄로 이루어진다.
# 각 줄에는 두 변수 A와 B의 초기 값을 나타내는 음이 아닌 정수A0 , B0 (0 <= A0 ,B0<= 1018)이 공백 하나를 사이로 두고 주어진다.
#
#
#
# [출력]
#
# 각 테스트 케이스마다 한 줄에 하나씩,
#
# 조작 횟수를 출력한다. 최대값을 같게 할 수 있다면  의조작을 통해 A와 B-
#
# -   조작을 통해 A와 B의 값을 같게 할 수 없다면 ‘-1’(따옴표 제외)을 출력한다.

import sys
sys.stdin = open("input.txt", "r")


t = int(input())

for tc in range(1, t + 1):
    A0, B0 = list(map(float,input().split()))

    diff = B0 - A0
    if diff==1 or diff<0:
        print(f"#{tc} -1")
    else:
        print(f"#{tc} {int(diff//2)}")


